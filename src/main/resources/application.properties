# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.

#spring.datasource.url = jdbc:mysql://latte:3306/orderdb?useSSL=false
#spring.datasource.username = weborder
#spring.datasource.password = welcome1

#spring.datasource.url = jdbc:mysql://latte:3306/orderprod?useSSL=false
#spring.datasource.username = weborder
#spring.datasource.password = welcome1

spring.datasource.url = jdbc:mysql://focusdev.focus.co.id:3306/orderdb?useSSL=false
spring.datasource.username = weborder
spring.datasource.password = mysql

#spring.datasource.url = jdbc:mysql://focusdev.focus.co.id:3306/orderprod?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = mysql

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

server.contextPath=/weborder

#spring.jpa.database=MYSQL
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.javax.persistence.query.timeout=3600000

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select username, password, active from user where username=?
spring.queries.roles-query=select u.username, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?

# ==============================================================
# = Upload
# ==============================================================
#security.basic.enabled=false
#management.security.enabled=false
#security.ignored=/**
spring.http.multipart.max-file-size=3MB
spring.http.multipart.max-request-size=3MB
upload.folder=/home/upload/
upload.folders.target=/home/upload/cust_prod_target/
upload.folders.stock=/home/upload/cust_prod_stock/
upload.folders.mobilcustomer=/home/upload/cust_mobil/
